* freedesktop-shared-mime

=Node= MIME library uses [[http://freedesktop.org/wiki/Software/shared-mime-info/][FreeDesktop shared-mime-info]] as database.
* FreeDesktop Shared MIME Info

=FreeDesktop shared mime info= contains a large number of common MIME types,
created by converting the existing KDE and GNOME databases to the new format and
merging them together. This database is more suitable for =nodejs= desktop
applications.

This package's building process converts =freedesktop.org.xml.in= to a =JSON=
data file.

* Main Features/Differences
** Many more file types are supported

FreeDesktop Shared MIME Info database seem to be larger than =IANA= standards,
include script files like =Ruby=, =Python= and many others.

** *No =Charsets= info are available*
The =freedesktop= spec doesn't seem to have these information.

** Directories and some other special file types are supported
Use =lstat=, the following special file types are also supported

- "inode/directory"
- "inode/blockdevice"
- "inode/chardevice"
- "inode/symlink"
- "inode/fifo"
- "inode/socket"

** =lookup= is used for file names *exclusively*

=mime-type= works for extension without leading dot, like
: mime_type.lookup("html");  // "text/html"

but
: shared_mime.lookup("html"); // false

The idea is that =lookup= should mainly be used to determine the file type
according to file's extension. Under such considerations, "html" is a file
without any extension, even though it has a name like some valid extension. This
change avoids the following issue:

: shared_mime.lookup("/home/me/Desktop");  // "inode/directory" not "application/x-desktop"


* Install

: npm install freedesktop-shared-mime

* Usage

The library interface is similar to [[https://github.com/jshttp/mime-types][mime-types]], with freedesktop-specific
features like:

#+BEGIN_SRC javascript
  var shared_mime = require('freedesktop-shared-mime')

  shared_mime.lookup(".")         // "inode/directory"
  shared_mime.lookup("nonexistent_dir/") // "inode/directory"

  shared_mime.aliases("text/x-gettext-translation") // ["text/x-po", "application/x-gettext"]

  shared_mime.supertype("application/epub+zip")         // "application/zip"

  shared_mime.comment("application/x-jbuilder-project") // "JBuilder project"

  shared_mime.generic_icon("application/rss+xml") // "text-html"
#+END_SRC

* TODO Remainings

** Better README
Do we have to use =md= format?

** tests
use =Istanbul= or others for coverage tests.
